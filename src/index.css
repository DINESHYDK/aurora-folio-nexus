@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark theme only - Purple & Emerald Green color scheme */
    --background: 260 100% 13%; /* #180043 */
    --foreground: 0 0% 100%; /* White text */

    --card: 260 100% 8%; /* Darker purple for cards */
    --card-foreground: 0 0% 100%; /* White text */

    --popover: 260 100% 8%;
    --popover-foreground: 0 0% 100%;

    --primary: 165 100% 70%; /* Cyan #64ffda */
    --primary-foreground: 0 0% 0%; /* Black text on cyan for better contrast */

    --secondary: 260 100% 18%; /* Lighter purple */
    --secondary-foreground: 0 0% 100%;

    --muted: 260 50% 20%; /* Muted purple */
    --muted-foreground: 0 0% 70%; /* Light grey for muted text */

    --accent: 165 100% 75%; /* Brighter cyan for accents */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%; /* Red for errors */
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 25%; /* Light grey borders */
    --input: 260 100% 15%; /* Slightly lighter purple for inputs */
    --ring: 160 84% 39%; /* Green focus ring */

    --radius: 0.5rem;

    /* Sidebar colors */
    --sidebar-background: 260 100% 10%;
    --sidebar-foreground: 0 0% 100%;
    --sidebar-primary: 160 84% 39%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 260 100% 15%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 0 0% 20%; /* Silver borders */
    --sidebar-ring: 160 84% 39%;

    /* Command Palette Specific Colors */
    --cp-background: 220 13% 9%; /* Deep dark background */
    --cp-surface: 220 13% 12%; /* Slightly lighter surface */
    --cp-border: 220 13% 18%; /* Border color */
    --cp-glow: 266 100% 70%; /* Purple glow effect */
    --cp-text-primary: 220 9% 95%; /* Primary text */
    --cp-text-secondary: 220 9% 65%; /* Secondary text */
    --cp-accent: 266 85% 58%; /* Accent color */
    --cp-hover: 220 13% 15%; /* Hover state */
    --cp-focus: 266 100% 80%; /* Focus state */
    --cp-success: 160 84% 39%; /* Success/active state */
    --cp-warning: 45 100% 60%; /* Warning state */
    --cp-error: 0 84% 60%; /* Error state */

    /* Command Palette Animation Properties */
    --cp-animation-duration: 300ms;
    --cp-animation-timing: cubic-bezier(0.4, 0, 0.2, 1);
    --cp-border-radius: 12px;
    --cp-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    --cp-backdrop-blur: 24px;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family:
      "Plus Jakarta Sans",
      ui-sans-serif,
      system-ui,
      -apple-system,
      Segoe UI,
      Roboto,
      Ubuntu,
      Cantarell,
      "Helvetica Neue",
      Arial,
      "Noto Sans",
      sans-serif;
  }
}

@layer components {
  .glass {
    background: linear-gradient(
      135deg,
      hsl(var(--background) / 0.7),
      hsl(var(--card) / 0.5)
    );
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid hsl(var(--border));
    box-shadow: 0 10px 30px -10px hsl(var(--primary) / 0.15);
  }

  .glass-dark {
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0.08) 100%
    );
    backdrop-filter: blur(24px) saturate(180%) brightness(1.1);
    -webkit-backdrop-filter: blur(24px) saturate(180%) brightness(1.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.12),
      0 2px 8px rgba(0, 0, 0, 0.08),
      inset 0 1px 0 rgba(255, 255, 255, 0.15),
      inset 0 -1px 0 rgba(255, 255, 255, 0.05);
    position: relative;
  }

  .glass-dark::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: inherit;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.15) 0%,
      transparent 50%,
      rgba(255, 255, 255, 0.05) 100%
    );
    mask:
      linear-gradient(black, black) content-box,
      linear-gradient(black, black);
    mask-composite: xor;
    -webkit-mask-composite: xor;
    pointer-events: none;
  }

  .gradient-text {
    background-image: linear-gradient(
      120deg,
      hsl(var(--primary)),
      hsl(var(--accent)),
      hsl(165 100% 80%)
    );
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .gradient-text-animated {
    background-image: linear-gradient(
      45deg,
      hsl(var(--primary)),
      hsl(165 100% 75%),
      hsl(180 100% 70%),
      hsl(var(--accent)),
      hsl(160 100% 65%),
      hsl(var(--primary)),
      hsl(170 100% 75%),
      hsl(var(--accent))
    );
    background-size: 400% 400%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: gradient-flow 8s ease-in-out infinite;
  }

  .gradient-name-hero {
    background-image: linear-gradient(
      90deg,
      hsl(165 100% 70%),
      hsl(165 100% 80%),
      hsl(180 100% 75%),
      hsl(170 100% 70%),
      hsl(165 100% 75%),
      hsl(160 100% 70%),
      hsl(165 100% 70%)
    );
    background-size: 300% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: name-gradient-flow 6s ease-in-out infinite;
    position: relative;
  }

  .gradient-name-hero::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: linear-gradient(
      90deg,
      hsl(165 100% 70%),
      hsl(165 100% 80%),
      hsl(180 100% 75%),
      hsl(170 100% 70%),
      hsl(165 100% 75%),
      hsl(160 100% 70%),
      hsl(165 100% 70%)
    );
    background-size: 300% 100%;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    animation: name-gradient-flow 6s ease-in-out infinite;
    filter: blur(8px);
    opacity: 0.4;
    z-index: -1;
  }

  .aurora {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background:
      radial-gradient(
        40% 50% at 20% 10%,
        hsl(var(--primary) / 0.4),
        transparent 60%
      ),
      radial-gradient(
        40% 50% at 80% 20%,
        hsl(var(--accent) / 0.35),
        transparent 60%
      ),
      radial-gradient(
        50% 60% at 50% 80%,
        hsl(260 100% 25% / 0.3),
        transparent 60%
      ),
      radial-gradient(
        30% 40% at 70% 60%,
        hsl(160 100% 50% / 0.2),
        transparent 50%
      );
    filter: blur(40px);
    opacity: 0.9;
    animation: aurora 12s ease-in-out infinite;
  }
  .aurora--party {
    filter: blur(34px) saturate(1.15);
    opacity: 1;
    animation-duration: 7s;
  }

  /* Interactive utilities */
  .story-link {
    position: relative;
  }
  .story-link::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    height: 2px;
    width: 100%;
    background: hsl(var(--primary));
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 300ms ease;
  }
  .story-link:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }

  .hover-scale {
    transition: transform 200ms ease;
  }
  .hover-scale:hover {
    transform: scale(1.05);
  }

  .pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Enhanced animations for ProfileCard and TextType */
  .animate-spin-slow {
    animation: spin 8s linear infinite;
  }

  .animate-shimmer {
    animation: shimmer 2s ease-in-out infinite;
  }

  .perspective-1000 {
    perspective: 1000px;
  }

  @keyframes shimmer {
    0% {
      transform: translateX(-100%) skewX(-12deg);
    }
    100% {
      transform: translateX(200%) skewX(-12deg);
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes gradient-flow {
    0% {
      background-position: 0% 50%;
    }
    25% {
      background-position: 100% 50%;
    }
    50% {
      background-position: 100% 100%;
    }
    75% {
      background-position: 0% 100%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
}
@keyframes name-gradient-flow {
  0% {
    background-position: 0% 50%;
  }
  33% {
    background-position: 100% 50%;
  }
  66% {
    background-position: 200% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
/* Command Palette Specific Utilities */
@layer components {
  .cp-container {
    background: hsl(var(--cp-background));
    border: 1px solid hsl(var(--cp-border));
    border-radius: var(--cp-border-radius);
    box-shadow: var(--cp-shadow);
    backdrop-filter: blur(var(--cp-backdrop-blur));
    -webkit-backdrop-filter: blur(var(--cp-backdrop-blur));
  }

  .cp-surface {
    background: hsl(var(--cp-surface));
    border: 1px solid hsl(var(--cp-border));
    border-radius: calc(var(--cp-border-radius) - 2px);
  }

  .cp-glow {
    box-shadow:
      0 0 20px hsl(var(--cp-glow) / 0.3),
      0 0 40px hsl(var(--cp-glow) / 0.2),
      0 0 80px hsl(var(--cp-glow) / 0.1);
  }

  .cp-glow-border {
    position: relative;
    background: hsl(var(--cp-surface));
    border-radius: var(--cp-border-radius);
  }

  .cp-glow-border::before {
    content: "";
    position: absolute;
    inset: -2px;
    background: linear-gradient(
      45deg,
      hsl(var(--cp-glow)),
      hsl(var(--cp-accent)),
      hsl(var(--cp-glow))
    );
    border-radius: var(--cp-border-radius);
    z-index: -1;
    opacity: 0.6;
    animation: cp-border-glow 3s ease-in-out infinite;
  }

  .cp-hover {
    transition: all var(--cp-animation-duration) var(--cp-animation-timing);
  }

  .cp-hover:hover {
    background: hsl(var(--cp-hover));
    transform: translateY(-1px);
    box-shadow:
      0 4px 12px hsl(var(--cp-glow) / 0.2),
      0 2px 4px hsl(var(--cp-glow) / 0.1);
  }

  .cp-focus {
    outline: 2px solid hsl(var(--cp-focus));
    outline-offset: 2px;
  }

  @keyframes cp-border-glow {
    0%,
    100% {
      opacity: 0.6;
      filter: hue-rotate(0deg);
    }
    50% {
      opacity: 1;
      filter: hue-rotate(90deg);
    }
  }

  @keyframes cp-pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }

  @keyframes cp-slide-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes cp-scale-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .cp-animate-in {
    animation: cp-slide-in var(--cp-animation-duration)
      var(--cp-animation-timing);
  }

  .animate-fade-in {
    animation: fade-in 300ms ease-in-out;
  }

  .animate-scale-in {
    animation: cp-scale-in var(--cp-animation-duration)
      var(--cp-animation-timing);
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .cp-animate-in,
    .animate-fade-in,
    .animate-scale-in {
      animation: none;
    }

    .cp-hover {
      transition: none;
    }

    .cp-hover:hover {
      transform: none;
    }
  }

  /* Screen reader only utility */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
}
/* GlowingBorder Component Styles */
@layer components {
  @keyframes glowing-border-animation {
    0% {
      background-position:
        0% 50%,
        50% 0%,
        100% 50%,
        50% 100%;
      opacity: 0.6;
    }
    25% {
      background-position:
        100% 50%,
        50% 0%,
        0% 50%,
        50% 100%;
      opacity: 0.8;
    }
    50% {
      background-position:
        100% 50%,
        50% 100%,
        0% 50%,
        50% 0%;
      opacity: 1;
    }
    75% {
      background-position:
        0% 50%,
        50% 100%,
        100% 50%,
        50% 0%;
      opacity: 0.8;
    }
    100% {
      background-position:
        0% 50%,
        50% 0%,
        100% 50%,
        50% 100%;
      opacity: 0.6;
    }
  }

  .glowing-border-container:hover .glowing-border-gradient {
    opacity: 1;
  }

  .glowing-border-container:hover .glowing-border-static {
    opacity: 0;
  }

  .glowing-border-container:hover .glowing-border-glow {
    opacity: var(--glow-opacity);
  }

  .glowing-border-container:focus-within .glowing-border-gradient {
    opacity: 1;
    animation-duration: calc(var(--animation-duration) * 0.5);
  }

  .glowing-border-container:focus-within .glowing-border-static {
    opacity: 0;
  }

  .glowing-border-container:focus-within .glowing-border-glow {
    opacity: calc(var(--glow-opacity) * 1.5);
  }

  /* Performance optimizations for GlowingBorder */
  .glowing-border-container * {
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  /* Reduced motion support for GlowingBorder */
  @media (prefers-reduced-motion: reduce) {
    .glowing-border-gradient {
      animation: none !important;
    }

    .glowing-border-container:hover .glowing-border-gradient,
    .glowing-border-container:focus-within .glowing-border-gradient {
      opacity: 0.8;
    }
  }
}

/* BackgroundEffects Component Styles */
@layer components {
  /* Parallax animation classes */
  .cp-parallax-slow {
    animation: cp-parallax-slow 20s ease-in-out infinite;
  }

  .cp-parallax-medium {
    animation: cp-parallax-medium 15s ease-in-out infinite;
  }

  .cp-parallax-fast {
    animation: cp-parallax-fast 12s ease-in-out infinite;
  }

  /* Mesh gradient animation */
  .cp-mesh-animation {
    animation: cp-mesh-gradient 25s ease-in-out infinite;
  }

  @keyframes cp-parallax-slow {
    0%,
    100% {
      transform: translate3d(0, 0, 0) rotate(0deg);
    }
    25% {
      transform: translate3d(-10px, -15px, 0) rotate(1deg);
    }
    50% {
      transform: translate3d(5px, -10px, 0) rotate(-0.5deg);
    }
    75% {
      transform: translate3d(-5px, 10px, 0) rotate(0.5deg);
    }
  }

  @keyframes cp-parallax-medium {
    0%,
    100% {
      transform: translate3d(0, 0, 0) scale(1);
    }
    33% {
      transform: translate3d(15px, -10px, 0) scale(1.05);
    }
    66% {
      transform: translate3d(-10px, 15px, 0) scale(0.98);
    }
  }

  @keyframes cp-parallax-fast {
    0%,
    100% {
      transform: translate3d(0, 0, 0) rotate(0deg) scale(1);
    }
    20% {
      transform: translate3d(8px, -12px, 0) rotate(0.5deg) scale(1.02);
    }
    40% {
      transform: translate3d(-6px, 8px, 0) rotate(-0.3deg) scale(0.99);
    }
    60% {
      transform: translate3d(10px, 5px, 0) rotate(0.2deg) scale(1.01);
    }
    80% {
      transform: translate3d(-4px, -8px, 0) rotate(-0.1deg) scale(1);
    }
  }

  @keyframes cp-mesh-gradient {
    0%,
    100% {
      background-position:
        0% 0%,
        100% 100%,
        50% 50%,
        25% 75%;
      opacity: 0.2;
    }
    25% {
      background-position:
        25% 25%,
        75% 75%,
        100% 0%,
        0% 100%;
      opacity: 0.3;
    }
    50% {
      background-position:
        50% 50%,
        50% 50%,
        0% 100%,
        100% 0%;
      opacity: 0.25;
    }
    75% {
      background-position:
        75% 25%,
        25% 75%,
        75% 25%,
        50% 50%;
      opacity: 0.35;
    }
  }

  /* Performance optimizations for BackgroundEffects */
  .cp-parallax-slow,
  .cp-parallax-medium,
  .cp-parallax-fast,
  .cp-mesh-animation {
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    transform-style: preserve-3d;
  }

  /* Reduced motion support for BackgroundEffects */
  @media (prefers-reduced-motion: reduce) {
    .cp-parallax-slow,
    .cp-parallax-medium,
    .cp-parallax-fast,
    .cp-mesh-animation {
      animation: none !important;
      transform: translate3d(0, 0, 0) !important;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .cp-parallax-slow,
    .cp-parallax-medium,
    .cp-parallax-fast,
    .cp-mesh-animation {
      opacity: 0.1 !important;
    }
  }
}
